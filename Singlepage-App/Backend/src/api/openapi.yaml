openapi: 3.0.0
info:
  title: UniVerwaltung
  version: '1.0'
  description: |-
    Unsere UniVerwaltung-App ermöglicht das Verwalten von verschiedenen Stammdaten. Mit der App können Sie Studierende, Kurse sowie Dozenten einer fiktiven Hochschule verwalten.
    Die App nutzt dabei einen REST-Webservice zur Kommunikation mit dem Backend. Der Webservice erlaubt dabei die Standard-CRUD-Operationen, also das Suchen, Anzeigen, Anlegen, Bearbeiten und Löschen von Studierenden, Kursen und Dozenten.
  contact:
    name: 'Christian Heck, Milena Seeburger, Nina Resch'
    email: christian@heckimweb.de
servers:
  - url: 'http://localhost:3000'
    description: Backend im Entwicklungsmodus
  - url: 'http://localhost:8080'
    description: Frontend im Entwicklungsmodus
  - url: 'http://localhost:8081'
    description: MongoDB Admin GUI
paths:
  /:
    get:
      summary: Wurzeladresse des Webservices
      tags:
        - Start
      operationId: get
      description: Liefert eine HATEOAS-Ansicht aller collections des Webservices.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HATEOAS_Collection'
  /dozent:
    get:
      summary: Dozentenliste durchsuchen
      tags:
        - Dozentenliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dozent'
      operationId: get-dozent
      description: Suche nach Dozenten. Gibt eine Liste aller gespeicherten Dozenten (zu den angegebenen Suchkriterien) zurück.
      parameters:
        - schema:
            type: string
          in: query
          name: vorname
          description: Gesuchter Vorname
        - schema:
            type: string
          in: query
          name: nachname
          description: Gesuchter Nachname
        - schema:
            type: string
          in: query
          name: fakultaet
          description: Gesuchte Fakultät
        - schema:
            type: string
          in: query
          name: email
          description: Gesuchte E-Mail
        - schema:
            type: string
          in: query
          name: intern
          description: Interner oder Externer Dozent
    post:
      summary: Neuen Dozent anlegen
      tags:
        - Dozentenliste
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dozent'
      operationId: post-dozent
      description: |-
        Einen neuen Dozenten anlegen. Dazu muss ein vollständiges Dozentenobjekt an den Webservice übergeben werden. Es muss mindestens ein Vorname, Nachname sowie die Fakultät des Dozenten mitgegeben werden.
        Die ID wird beim Anlegen von der Datenbank automatisch generiert.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dozent'
  '/dozent/{id}':
    get:
      tags:
        - Dozent
      summary: Einzelnen Dozenten auslesen
      description: Auslesen eines einzelnen Dozenten anhand der ID.
      operationId: get-dozent-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dozent'
        '404':
          description: Not Found
    put:
      tags:
        - Dozent
      summary: Dozentendaten überschreiben
      description: 'Daten eines Dozenten überschreiben. Hiezu muss der vollständige Dozentendatensatz an den Server geschickt werden (inklusive der Felder, die nicht überschrieben wurden).'
      operationId: put-dozent-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dozent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dozent'
        '404':
          description: Not Found
    patch:
      tags:
        - Dozent
      summary: Einzelnes Feld des Dozenten ändern
      description: 'Daten einzelner Felder eines Dozenten überschreiben. Hiezu müssen nur die Felder an den Server geschickt, die verändert wurden.'
      operationId: patch-dozent-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dozent'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dozent'
        '404':
          description: Not Found
    delete:
      tags:
        - Dozent
      summary: Einzelnen Dozent löschen
      description: Löschen eines einzelnen Dozenten anhand der ID.
      operationId: delete-dozent-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /kurse:
    get:
      summary: Kurse anzeigen
      tags:
        - Kursliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurse'
      operationId: get-kurse
      description: Suche nach Kursen und gebe Liste von Kursen entsprechend der Parameter zurück.
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: Gesuchter Kursname
        - schema:
            type: string
          in: query
          name: pruefungsform
          description: Gesuchte Pruefungsform
        - schema:
            type: integer
          in: query
          name: ects
          description: Gesuchte ECTS-Punkte
    post:
      summary: Kurse hinzufügen
      tags:
        - Kursliste
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurse'
      operationId: post-kurse
      description: |-
        Neuen Kurs anlegen mit Name, Prüfungsform als string und ECTS als Integer.
        Id ist auto-generiert.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kurse'
  '/kurse/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Kurs anzeigen
      tags:
        - Kurs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurse'
        '404':
          description: Not Found
      operationId: get-kurse-id
      description: Einen Kurs mit ID anzeigen.
    put:
      summary: Kurs einfügen
      tags:
        - Kurs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurse'
        '404':
          description: Not Found
      operationId: put-kurse-id
      description: Überschreibe Kurs mit angegebener ID (außer ID-Feld)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kurse'
    patch:
      summary: Kurs ändern
      tags:
        - Kurs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kurse'
        '404':
          description: Not Found
      operationId: patch-kurse-id
      description: Ändere Kurs mit angegebener ID.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kurse'
    delete:
      summary: Kurs löschen
      tags:
        - Kurs
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: delete-kurse-id
      description: Lösche Kurs mit angegebener ID.
  /studierender:
    get:
      summary: Studierendenliste durchsuchen
      tags:
        - Studierendenliste
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Studierender'
      operationId: get-studierender
      description: Suche nach Studierenden. Gibt eine Liste aller gespeicherten Studierenden (zu den angegebenen Suchkriterien) zurück.
      parameters:
        - schema:
            type: string
          in: query
          name: vorname
          description: Gesuchter Vorname
        - schema:
            type: string
          in: query
          name: nachname
          description: Gesuchter Nachname
        - schema:
            type: string
          in: query
          name: alter
          description: Gesuchtes Alter
        - schema:
            type: string
          in: query
          name: email
          description: Gesuchte E-Mail
        - schema:
            type: string
          in: query
          name: matrikelnummer
          description: Matrikelnummer
    post:
      summary: Neuen Studierenden anlegen
      tags:
        - Studierendenliste
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Studierender'
      operationId: post-studierender
      description: |-
        Einen neuen Studierenden anlegen. Dazu muss ein vollständiges Studierendenobjekt an den Webservice übergeben werden. Es muss mindestens ein Vorname, Nachname sowie die Matrikelnummer des Studierenden mitgegeben werden.
        Die ID wird beim Anlegen von der Datenbank automatisch generiert.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Studierender'
  '/studierender/{id}':
    get:
      tags:
        - Studierender
      summary: Einzelnen Studierenden auslesen
      description: Auslesen eines einzelnen Studierenden anhand der ID.
      operationId: get-studierender-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Studierender'
        '404':
          description: Not Found
    put:
      tags:
        - Studierender
      summary: Studierendendaten überschreiben
      description: 'Daten eines Studierenden überschreiben. Hiezu muss der vollständige Studierendendatensatz an den Server geschickt werden (inklusive der Felder, die nicht überschrieben wurden).'
      operationId: put-studierender-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Studierender'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Studierender'
        '404':
          description: Not Found
    patch:
      tags:
        - Studierender
      summary: Einzelnes Feld des Studierenden ändern
      description: 'Daten einzelner Felder eines Studierenden überschreiben. Hiezu müssen nur die Felder an den Server geschickt, die verändert wurden.'
      operationId: patch-studierender-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Studierender'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Studierender'
        '404':
          description: Not Found
    delete:
      tags:
        - Studierender
      summary: Einzelnen Studierenden löschen
      description: Löschen eines einzelnen Studierenden anhand der ID.
      operationId: delete-studierender-id
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
components:
  schemas:
    Dozent:
      title: Dozent
      type: object
      description: |-
        Ein Eintrag in der Dozentenverwaltung, bestehend aus Vorname, Nachname, Fakultät, E-Mail-Adresse und einem Status, der die Werte "intern" für interner Dozent und "extern" für externer Dozent annehmen kann.
        Die entsprechende ID wird automatisch von der Datenbank generiert und kann nachträglich nicht mehr verändert werden.
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Dozent_Ressource'
        _id:
          type: string
        vorname:
          type: string
        nachname:
          type: string
        email:
          type: string
        fakultaet:
          type: string
        status:
          type: string
    HATEOAS_Dozent_Ressource:
      title: HATEOAS_Dozent_Ressource
      type: object
      description: Verlinkung zu einem einzelnen Dozentendatensatz.
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Dozent_Link'
        '':
          $ref: '#/components/schemas/HATEOAS_Dozent_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Dozent_Link'
    HATEOAS_Dozent_Link:
      title: HATEOAS_Dozent_Link
      type: object
      description: 'Einzelne HATEOAS-Verlinkung für einen Dozenten. Der Link definiert die Adresse, URL und Query Parameter zum Aufruf der jeweiligen Aktion.'
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
    HATEOAS_Collection:
      title: HATEOAS_Collection
      type: object
      description: HATEOAS-Links aller Collections
      properties:
        _name:
          type: string
        query_dozent:
          $ref: '#/components/schemas/HATEOAS_Dozent_Link'
        create_dozent:
          $ref: '#/components/schemas/HATEOAS_Dozent_Link'
        query_kurse:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
        create_kurse:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
    Kurse:
      title: Kurse
      type: object
      properties:
        _link:
          $ref: '#/components/schemas/HATEOAS_Kurse_Ressource'
        _id:
          type: string
        Name:
          type: string
        pruefungsform:
          type: string
        ECTS:
          type: integer
      description: 'Einträge für Kurse, bestehend aus ID (auto-generated), Name (String), Pruefungsform (String), ECTS (integer).'
    HATEOAS_Kurse_Ressource:
      title: HATEOAS_Kurse_Ressource
      type: object
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
        update:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
        patch:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Kurse_Link'
      description: Verlinkung auf Ressourcen der Kurse.
    HATEOAS_Kurse_Link:
      title: HATEOAS_Kurse_Link
      type: object
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
      description: 'HATEOAS-Verlinkung für einzelnen Kurs. '
    Studierender:
      title: Studierender
      type: object
      description: |-
        Ein Eintrag in der Studierendenverwaltung, bestehend aus Vorname, Nachname, Alter, E-Mail-Adresse und der Matrikelnummer.
        Die entsprechende ID wird automatisch von der Datenbank generiert und kann nachträglich nicht mehr verändert werden.
      properties:
        _links:
          $ref: '#/components/schemas/HATEOAS_Studierender_Ressource'
        _id:
          type: string
        vorname:
          type: string
        nachname:
          type: string
        email:
          type: string
        alter:
          type: string
        matrikelnummer:
          type: string
    HATEOAS_Studierender_Ressource:
      title: HATEOAS_Studierender_Ressource
      type: object
      description: Verlinkung zu einem einzelnen Studierendendatensatz.
      properties:
        read:
          $ref: '#/components/schemas/HATEOAS_Studierender_Link'
        '':
          $ref: '#/components/schemas/HATEOAS_Studierender_Link'
        delete:
          $ref: '#/components/schemas/HATEOAS_Studierender_Link'
    HATEOAS_Studierender_Link:
      title: HATEOAS_Studierender_Link
      type: object
      description: 'Einzelne HATEOAS-Verlinkung für einen Studierenden. Der Link definiert die Adresse, URL und Query Parameter zum Aufruf der jeweiligen Aktion.'
      properties:
        url:
          type: string
        method:
          type: string
        query_params:
          type: array
          items:
            type: string
tags:
  - name: Dozent
  - name: Dozentenliste
  - name: Kurs
  - name: Kursliste
  - name: Start
  - name: Student
  - name: Studentenliste
